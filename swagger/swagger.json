{
    "swagger": "2.0",
    "info": {
        "title": "API's for Lagos State SME Hub",
        "description": "This is developed using Beego, and should be consumed by only developers in GPI",
        "version": "1.0.0",
        "termsOfService": "http://my-gpi.io/",
        "contact": {
            "email": "endy.apina@my-gpi.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/admin/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get all Users",
                "operationId": "AdminController.GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseObject"
                            }
                        }
                    }
                }
            }
        },
        "/admin/invite": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "Invites other admin users to join the system",
                "operationId": "AdminController.Invite Sub Admin",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "A json containing the role {int}, email {string}, tokenString",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Invite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} invitation sent!"
                    },
                    "403": {
                        "description": "user not exist"
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "Logs user into the system",
                "operationId": "AdminController.Login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The username for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password for login",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponseData"
                        }
                    },
                    "403": {
                        "description": "user not exist"
                    }
                }
            }
        },
        "/admin/sub/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get all Sub Admins",
                "operationId": "AdminController.AllSubAdmins",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseObject"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "Create more sub Admins .",
                "operationId": "AdminController.SubAdmin",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for admin content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.APIData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ResponsePackage"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/admin/sup/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "Get all Super Administrative users",
                "operationId": "AdminController.GetSupAdmin",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/admin/sup/register": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "Create more super administrative users.",
                "operationId": "AdminController.CreateAdmin",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for admin content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponseData"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/extras/token/validate": {
            "get": {
                "tags": [
                    "extras"
                ],
                "description": "validates token string in a request and returns the user information.",
                "operationId": "ExtraController.Validate Token",
                "responses": {
                    "200": {
                        "description": "{string} TokenString"
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get all Users",
                "operationId": "UserController.GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Logs user into the system",
                "operationId": "UserController.Login",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponseData"
                        }
                    },
                    "403": {
                        "description": "user not exist"
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "create users",
                "operationId": "UserController.CreateUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponseData"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/validate": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "decrypts token string to get user data",
                "operationId": "UserController.logout",
                "responses": {
                    "200": {
                        "description": "{string} logout success"
                    }
                }
            }
        },
        "/user/{uid}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get user by uid",
                "operationId": "UserController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ResponsePackage"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.Model": {
            "title": "Model",
            "type": "object"
        },
        "models.APIData": {
            "title": "APIData",
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/models.User"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.APIResponseData": {
            "title": "APIResponseData",
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/models.ResponseBody"
                },
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.Invite": {
            "title": "Invite",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "integer",
                    "format": "int64"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.ResponseBody": {
            "title": "ResponseBody",
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Roles"
                    }
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.ResponseObject": {
            "title": "ResponseObject",
            "type": "object",
            "properties": {
                "role": {
                    "$ref": "#/definitions/models.Roles"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.ResponsePackage": {
            "title": "ResponsePackage",
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/models.ResponseBody"
                },
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Roles": {
            "title": "Roles",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "integer",
                    "format": "int64"
                },
                "street": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "UserController handles all operations about Users\n"
        },
        {
            "name": "admin",
            "description": "AdminController handles admin controller\n"
        },
        {
            "name": "extras",
            "description": "ExtraController handles every other system related sub-service\n"
        }
    ]
}